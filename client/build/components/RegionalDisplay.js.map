{"version":3,"sources":["../../src/components/RegionalDisplay.jsx"],"names":["useState","useEffect","React","RegionalDisplay","type","dat","region","setRegion","data","regions","indexOf","element","loc","discharged","deaths","totalConfirmed","state","ruralBeds","urbanBeds","totalBeds","propTypes","PropTypes","string","array","DropDown","regionData","dropDown","document","getElementById","dropDownList","handler","e","style","display","addEventListener","childNodes","event","target","innerHTML","map","makeMenuCard","func","name"],"mappings":"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","sourcesContent":["const { useState, useEffect } = React\n\nexport default function RegionalDisplay ({ type, dat }) {\n    const [region, setRegion] = useState('Tamil Nadu')\n\n    if (type === 'Testing') return (<div display='none'></div>)\n    const data = dat[regions[type].indexOf(region)]\n    if (!data) return null\n\n    let element\n    if (type === 'Cases') {\n        element = <div className=\"highlight\">\n            <h1>{data.loc}</h1>\n            <h3>Cured</h3>\n            <p>{data.discharged}</p>\n            <h3>Deaths</h3>\n            <p>{data.deaths}</p>\n            <h3>Total</h3>\n            <p>{data.totalConfirmed}</p>\n        </div>\n    } else {\n        element = <div className=\"highlight\">\n            <h1>{data.state}</h1>\n            <h3>Rural Beds</h3>\n            <p>{data.ruralBeds}</p>\n            <h3>Urban Beds</h3>\n            <p>{data.urbanBeds}</p>\n            <h3>Total Beds</h3>\n            <p>{data.totalBeds}</p>\n        </div>\n    }\n    return (\n        <div id=\"regionalData\">\n            <DropDown region={region} setRegion={setRegion} regionData={regions[type]} />\n            { element }\n        </div>\n    )\n}\n\nRegionalDisplay.propTypes = {\n    type: PropTypes.string,\n    dat: PropTypes.array\n}\n\nfunction DropDown ({ regionData, region, setRegion }) {\n    useEffect(() => {\n        const dropDown = document.getElementById('dropDown')\n        const dropDownList = document.getElementById('regionalDropDownMenuList')\n        const handler = (e) => {\n            dropDownList.style.display = e.type === 'mouseenter' ? 'block' : 'none'\n        }\n        dropDown.addEventListener('mouseenter', handler)\n        dropDown.addEventListener('mouseleave', handler)\n        for (const element of dropDownList.childNodes) {\n            element.addEventListener('click', (event) => {\n                const target = event.target.innerHTML\n                setRegion(target)\n\n                dropDownList.style.display = 'none'\n            })\n        }\n    }, [setRegion])\n    return (<div id=\"dropDown\">\n        <span id=\"regionalSelectedStats\"> {region} </span>\n        <ul id=\"regionalDropDownMenuList\" style={{ display: 'none' }} className=\"scrollable-menu dropdown\">\n            {regionData.map(makeMenuCard)}\n        </ul>\n    </div>)\n}\n\nDropDown.propTypes = {\n    regionData: PropTypes.array,\n    region: PropTypes.string,\n    setRegion: PropTypes.func\n}\n\nfunction makeMenuCard (name) {\n    return <li key={`dropdown-${name}`} className=\"dropdownList\">{name}</li>\n}\n"],"file":"RegionalDisplay.js"}