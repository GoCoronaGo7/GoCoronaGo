{"version":3,"sources":["../../../client/src/components/Dropdown.jsx"],"names":["Component","createRef","React","classNames","obj","Object","entries","reduce","acc","k","v","DEFAULT_PLACEHOLDER_STRING","Dropdown","constructor","props","state","selected","parseValue","value","options","label","placeholder","isOpen","dropdownRef","mounted","handleDocumentClick","bind","fireChangeEvent","componentDidUpdate","prevProps","setState","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","handleMouseDown","event","onFocus","type","button","stopPropagation","preventDefault","disabled","option","i","num","length","match","items","filter","item","setValue","newState","onChange","renderOption","isSelected","classes","baseClassName","className","optionClass","buildMenu","ops","map","groupTitle","name","_options","current","contains","target","isValueSelected","render","controlClassName","placeholderClassName","menuClassName","arrowClassName","arrowClosed","arrowOpen","disabledClass","placeHolderValue","dropdownClass","controlClass","placeholderClass","menuClass","arrowClass","menu","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/prop-types */\nconst { Component, createRef } = React\nconst classNames = (obj) =>\n    // eslint-disable-next-line no-return-assign\n    Object.entries(obj).reduce((acc, [k, v]) => acc += v ? ` ${k}` : '', '')\nconst DEFAULT_PLACEHOLDER_STRING = 'Select...'\n\nclass Dropdown extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            selected: this.parseValue(props.value, props.options) || {\n                label: typeof props.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : props.placeholder,\n                value: ''\n            },\n            isOpen: false\n        }\n        this.dropdownRef = createRef()\n        this.mounted = true\n        this.handleDocumentClick = this.handleDocumentClick.bind(this)\n        this.fireChangeEvent = this.fireChangeEvent.bind(this)\n    }\n\n    componentDidUpdate (prevProps) {\n        if (this.props.value !== prevProps.value) {\n            if (this.props.value) {\n                const selected = this.parseValue(this.props.value, this.props.options)\n                if (selected !== this.state.selected) {\n                    this.setState({ selected })\n                }\n            } else {\n                this.setState({\n                    selected: {\n                        label: typeof this.props.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : this.props.placeholder,\n                        value: ''\n                    }\n                })\n            }\n        }\n    }\n\n    componentDidMount () {\n        document.addEventListener('click', this.handleDocumentClick, false)\n        document.addEventListener('touchend', this.handleDocumentClick, false)\n    }\n\n    componentWillUnmount () {\n        this.mounted = false\n        document.removeEventListener('click', this.handleDocumentClick, false)\n        document.removeEventListener('touchend', this.handleDocumentClick, false)\n    }\n\n    handleMouseDown (event) {\n        if (this.props.onFocus && typeof this.props.onFocus === 'function') {\n            this.props.onFocus(this.state.isOpen)\n        }\n        if (event.type === 'mousedown' && event.button !== 0) return\n        event.stopPropagation()\n        event.preventDefault()\n\n        if (!this.props.disabled) {\n            this.setState({\n                isOpen: !this.state.isOpen\n            })\n        }\n    }\n\n    parseValue (value, options) {\n        let option\n\n        if (typeof value === 'string') {\n            for (let i = 0, num = options.length; i < num; i++) {\n                if (options[i].type === 'group') {\n                    const match = options[i].items.filter(item => item.value === value)\n                    if (match.length) {\n                        option = match[0]\n                    }\n                } else if (typeof options[i].value !== 'undefined' && options[i].value === value) {\n                    option = options[i]\n                }\n            }\n        }\n\n        return option || value\n    }\n\n    setValue (value, label) {\n        const newState = {\n            selected: {\n                value,\n                label\n            },\n            isOpen: false\n        }\n        this.fireChangeEvent(newState)\n        this.setState(newState)\n    }\n\n    fireChangeEvent (newState) {\n        if (newState.selected !== this.state.selected && this.props.onChange) {\n            this.props.onChange(newState.selected)\n        }\n    }\n\n    renderOption (option) {\n        let value = option.value\n        if (typeof value === 'undefined') {\n            value = option.label || option\n        }\n        const label = option.label || option.value || option\n        const isSelected = value === this.state.selected.value || value === this.state.selected\n\n        const classes = {\n            [`${this.props.baseClassName}-option`]: true,\n            [option.className]: !!option.className,\n            'is-selected': isSelected\n        }\n\n        const optionClass = classNames(classes)\n\n        return (\n            <div\n                key={value}\n                className={optionClass}\n                onMouseDown={this.setValue.bind(this, value, label)}\n                onClick={this.setValue.bind(this, value, label)}\n                role='option'\n                aria-selected={isSelected ? 'true' : 'false'}>\n                {label}\n            </div>\n        )\n    }\n\n    buildMenu () {\n        const { options, baseClassName } = this.props\n        const ops = options.map((option) => {\n            if (option.type === 'group') {\n                const groupTitle = (<div className={`${baseClassName}-title`}>\n                    {option.name}\n                </div>)\n                const _options = option.items.map((item) => this.renderOption(item))\n\n                return (\n                    <div className={`${baseClassName}-group`} key={option.name} role='listbox' tabIndex='-1'>\n                        {groupTitle}\n                        {_options}\n                    </div>\n                )\n            } else {\n                return this.renderOption(option)\n            }\n        })\n\n        return ops.length\n            ? ops\n            : <div className={`${baseClassName}-noresults`}>\n                                No options found\n            </div>\n    }\n\n    handleDocumentClick (event) {\n        if (this.mounted) {\n            if (!this.dropdownRef.current.contains(event.target)) {\n                if (this.state.isOpen) {\n                    this.setState({ isOpen: false })\n                }\n            }\n        }\n    }\n\n    isValueSelected () {\n        return typeof this.state.selected === 'string' || this.state.selected.value !== ''\n    }\n\n    render () {\n        const { baseClassName, controlClassName, placeholderClassName, menuClassName, arrowClassName, arrowClosed, arrowOpen, className } = this.props\n\n        const disabledClass = this.props.disabled ? 'Dropdown-disabled' : ''\n        const placeHolderValue = typeof this.state.selected === 'string' ? this.state.selected : this.state.selected.label\n\n        const dropdownClass = classNames({\n            [`${baseClassName}-root`]: true,\n            [className]: !!className,\n            'is-open': this.state.isOpen\n        })\n        const controlClass = classNames({\n            [`${baseClassName}-control`]: true,\n            [controlClassName]: !!controlClassName,\n            [disabledClass]: !!disabledClass\n        })\n        const placeholderClass = classNames({\n            [`${baseClassName}-placeholder`]: true,\n            [placeholderClassName]: !!placeholderClassName,\n            'is-selected': this.isValueSelected()\n        })\n        const menuClass = classNames({\n            [`${baseClassName}-menu`]: true,\n            [menuClassName]: !!menuClassName\n        })\n        const arrowClass = classNames({\n            [`${baseClassName}-arrow`]: true,\n            [arrowClassName]: !!arrowClassName\n        })\n\n        const value = (<div className={placeholderClass}>\n            {placeHolderValue}\n        </div>)\n        const menu = this.state.isOpen\n            ? <div className={menuClass} aria-expanded='true'>\n                {this.buildMenu()}\n            </div>\n            : null\n\n        return (\n            <div ref={this.dropdownRef} className={dropdownClass}>\n                <div className={controlClass} onMouseDown={this.handleMouseDown.bind(this)} onTouchEnd={this.handleMouseDown.bind(this)} aria-haspopup='listbox'>\n                    {value}\n                    <div className={`${baseClassName}-arrow-wrapper`}>\n                        {arrowOpen && arrowClosed\n                            ? this.state.isOpen ? arrowOpen : arrowClosed\n                            : <span className={arrowClass} />}\n                    </div>\n                </div>\n                {menu}\n            </div>\n        )\n    }\n}\n\nDropdown.defaultProps = { baseClassName: 'Dropdown' }\nexport default Dropdown\n"],"file":"Dropdown.js"}