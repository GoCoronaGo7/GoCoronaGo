import a from"regenerator-runtime";import b from"./RegionalDisplay.js";import c from"./LoadingIcon.js";function d(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=new Array(b);c<b;c++)d[c]=a[c];return d}function e(a){for(var b=function(c,d){var e,f,g;f=null!=c[e=d]?c[e]:{},g=Object.keys(f),"function"==typeof Object.getOwnPropertySymbols&&(g=g.concat(Object.getOwnPropertySymbols(f).filter(function(a){return Object.getOwnPropertyDescriptor(f,a).enumerable}))),g.forEach(function(b){b(a,b,f[b])})},c=arguments,d=1;d<arguments.length;d++)b(c,d);return a}function f(a,b){return(function(a){if(Array.isArray(a))return a})(a)||(function(a,b){var c,d,e=null==a?null:"undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(null!=e){var f=[],g=!0,h=!1;try{for(e=e.call(a);!(g=(c=e.next()).done)&&(f.push(c.value),!b||f.length!==b);g=!0);}catch(i){h=!0,d=i}finally{try{g||null==e.return||e.return()}finally{if(h)throw d}}return f}})(a,b)||g(a,b)||(function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")})()}function g(a,b){if(a){if("string"==typeof a)return d(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);if("Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c)return Array.from(c);if("Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c))return d(a,b)}}var h=React.useState,i=React.useEffect,j=new Map,k={Cases:"stats/latest",Testing:"stats/testing/latest",Beds:"hospitals/beds"};export default function l(d){var g,j=d.active,l=f(h(null),2),o=l[0],p=l[1],q=f(h(""),2),r=q[0],s=q[1];if(i(function(){var b;(b=a.mark(function b(){var c,d;return a.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return c="https://api.rootnet.in/covid19-in/"+k[j],a.next=3,m(c).catch(console.error);case 3:(d=a.sent)&&d.success||s("ERROR GETTING DATA"),p(e({},d.data,{type:j}));case 5:case"end":return a.stop()}},b)}),function(){var a=this,c=arguments;return new Promise(function(d,e){var f=b.apply(a,c);function g(a){h(f,d,e,g,h,"next",a)}function h(a){h(f,d,e,g,h,"throw",a)}g(void 0)})})()},[j]),o&&o.type===j){switch(n(o,j),j){case"Cases":g=React.createElement("div",{id:"statsHolderSmall"},React.createElement("div",{className:"highlight"},React.createElement("h1",null,"Discharged Cases"),React.createElement("p",null,(+o.summary.discharged).toLocaleString())),React.createElement("div",{className:"highlight"},React.createElement("h1",null,"Deaths"),React.createElement("p",null,(+o.summary.deaths).toLocaleString())),React.createElement("div",{className:"highlight"},React.createElement("h1",null,"Total"),React.createElement("p",null,(+o.summary.total).toLocaleString())));break;case"Testing":g=React.createElement("div",{id:"statsHolderSmall"},React.createElement("div",{className:"highlight"},React.createElement("h1",null,"Total Number of Tests"),React.createElement("p",null,(+o.totalSamplesTested).toLocaleString())));break;case"Beds":g=React.createElement("div",{id:"statsHolderSmall"},React.createElement("div",{className:"highlight"},React.createElement("h1",null," Rural Beds Available "),React.createElement("p",null,(+o.summary.ruralBeds).toLocaleString())),React.createElement("div",{className:"highlight"},React.createElement("h1",null," Urban Beds Available "),React.createElement("p",null,(+o.summary.urbanBeds).toLocaleString())),React.createElement("div",{className:"highlight"},React.createElement("h1",null," Total Beds Available "),React.createElement("p",null," ",(+o.summary.totalBeds).toLocaleString())))}return React.createElement("div",{id:"statsDisplayBounds"},g,React.createElement(b,{type:j,dat:o.regional}))}return React.createElement("div",null,React.createElement(c,null),r)};function m(a){var b=j.get(a);return b?Promise.resolve().then(function(){return b}):fetch(a).then(function(a){return a.json()}).then(function(b){return j.set(a,b),b}).catch(console.error)}function n(a,b){var c,e,f;(null==a?void 0:a.regional)&&((null===(e=regions[b])|| void 0===e?void 0:e.length)||(regions[b]=[],(c=regions[b]).push.apply(c,function(a){if(Array.isArray(a))return d(a)}(f=a.regional.map(o(b)))||function(a){if("undefined"!=typeof Symbol&&null!=a[Symbol.iterator]||null!=a["@@iterator"])return Array.from(a)}(f)||g(f)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())))}var o=function(a){return"Cases"===a?function(a){return a.loc}:function(a){return a.state}}